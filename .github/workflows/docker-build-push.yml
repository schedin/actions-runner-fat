name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      postfix:
        description: 'Optional postfix for date tag (e.g. -fix1)'
        required: false
        default: ''
  schedule:
    - cron: '40 3 * * 0' # Weekly on Sunday

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate date tag
        id: date
        run: |
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.postfix }}" ]; then
            echo "TAG=$(date +'%Y%m%d')${{ github.event.inputs.postfix }}" >> $GITHUB_OUTPUT
          else
            echo "TAG=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          fi

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/schedin/actions-runner-fat
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short
            type=raw,value=latest,enable=${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
            type=raw,value=${{ steps.date.outputs.TAG }},enable=${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
            type=raw,value=testing,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./image
          file: ./image/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
